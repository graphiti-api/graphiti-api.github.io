<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.3.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-05-23T02:06:24-04:00</updated><id>/feed.xml</id><title type="html">Graphiti</title><subtitle>Stylish Graph APIs
</subtitle><entry><title type="html">Tutorial Write-Ups Are Out!</title><link href="/2019/10/14/tutorial.html" rel="alternate" type="text/html" title="Tutorial Write-Ups Are Out!" /><published>2019-10-14T00:00:00-04:00</published><updated>2019-10-14T00:00:00-04:00</updated><id>/2019/10/14/tutorial</id><content type="html" xml:base="/2019/10/14/tutorial.html">&lt;p&gt;Though we‚Äôve long had a &lt;a href=&quot;https://github.com/graphiti-api/employee_directory&quot;&gt;sample application&lt;/a&gt; with step-by-step diffs, we‚Äôve been missing a full walkthrough. That now exists! Start with &lt;a href=&quot;https://www.graphiti.dev/tutorial/step_0&quot;&gt;Step 0: Bootstrapping&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These write-ups will tell you the relevant code and commands, but
they‚Äôll also give helpful context around the decisions Graphiti makes.
Even if you‚Äôre already a Graphiti user, I suggest checking it out!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Lee Richmond</name></author><summary type="html">Though we‚Äôve long had a sample application with step-by-step diffs, we‚Äôve been missing a full walkthrough. That now exists! Start with Step 0: Bootstrapping.</summary></entry><entry><title type="html">Graphiti 1.2 Released</title><link href="/2019/05/20/graphiti-1-2.html" rel="alternate" type="text/html" title="Graphiti 1.2 Released" /><published>2019-05-20T00:00:00-04:00</published><updated>2019-05-20T00:00:00-04:00</updated><id>/2019/05/20/graphiti-1-2</id><content type="html" xml:base="/2019/05/20/graphiti-1-2.html">&lt;p&gt;I‚Äôm thrilled to announce much-needed, much-improved Rails integration,
courtesy of the amazing &lt;a href=&quot;https://github.com/wagenet&quot;&gt;Peter Wagenet&lt;/a&gt; and
the new &lt;a href=&quot;https://github.com/graphiti-api/graphiti-rails&quot;&gt;graphiti-rails&lt;/a&gt; gem.
This gives us better error handling, tighter controllers, and a solid
foundation for the codebase moving forward.&lt;/p&gt;

&lt;p&gt;You‚Äôll be especially happy about this release if you‚Äôve ever tried to
add error-handling middleware. Because prior versions of Graphiti used
&lt;code class=&quot;highlighter-rouge&quot;&gt;rescue_from&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationController&lt;/code&gt;, we intercepted errors before
other middleware had access to them. Now everything just works.&lt;/p&gt;

&lt;p&gt;As part of this upgrade, we‚Äôre switching from &lt;code class=&quot;highlighter-rouge&quot;&gt;GraphitiErrors&lt;/code&gt; to
&lt;a href=&quot;https://github.com/wagenet/rescue_registry&quot;&gt;RescueRegistry&lt;/a&gt;. Think of
&lt;code class=&quot;highlighter-rouge&quot;&gt;RescueRegistry&lt;/code&gt; as a well-refactored version of &lt;code class=&quot;highlighter-rouge&quot;&gt;GraphitiErrors&lt;/code&gt;, available to
even non-Graphiti developers.&lt;/p&gt;

&lt;p&gt;Though you don‚Äôt have to do anything to upgrade to Graphiti 1.2, this release will start throwing deprecation notices around &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplicationController&lt;/code&gt;. Don‚Äôt worry, the required changes are quite minor and spelled out in the &lt;a href=&quot;https://www.graphiti.dev/guides/graphiti-rails-migration&quot;&gt;graphiti-rails migration guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I‚Äôm quite happy with how this effort turned out. This release dramatically improves our integration with Rails internals, and I think everyone involved learned a lot. I‚Äôm honored to work with such talented developers in our open-source community ‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;If you have any further questions, check out the &lt;code class=&quot;highlighter-rouge&quot;&gt;#dev&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;#rails&lt;/code&gt;
channels in our &lt;a href=&quot;https://join.slack.com/t/graphiti-api/shared_invite/enQtMjkyMTA3MDgxNTQzLTU5MDI4MDllNTEzOTE1Nzk0ZGJlNTcxZDYzMGY2ZTczMDY2OWZhM2RmNTU0YWNiOWZhZDhkMmU4MzQ5NzIyNWM&quot;&gt;Slack Chat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Lee Richmond</name></author><summary type="html">I‚Äôm thrilled to announce much-needed, much-improved Rails integration, courtesy of the amazing Peter Wagenet and the new graphiti-rails gem. This gives us better error handling, tighter controllers, and a solid foundation for the codebase moving forward.</summary></entry><entry><title type="html">Graphiti 1.1 Released</title><link href="/2019/05/08/graphiti-1-1.html" rel="alternate" type="text/html" title="Graphiti 1.1 Released" /><published>2019-05-08T00:00:00-04:00</published><updated>2019-05-08T00:00:00-04:00</updated><id>/2019/05/08/graphiti-1-1</id><content type="html" xml:base="/2019/05/08/graphiti-1-1.html">&lt;p&gt;Our first minor version bump centers around an important update:
&lt;strong&gt;better errors for clients&lt;/strong&gt;. This is the first phase of work to allow us to provide more actionable errors to API users who might not also be developers of the API itself. This was brought to us by Graphiti maintainer &lt;a href=&quot;https://github.com/wadetandy&quot;&gt;Wade Tandy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Previously, when a client sent a bad write request to the server -
unwritable attributes/relationships, or bad types - we would render the
same generic 500 error JSON. We now render helpful error messages, so
third-party clients know how to correct their requests.&lt;/p&gt;

&lt;p&gt;This is currently only affecting invalid writes, but the foundation laid
will be extendable to reads as well.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Lee Richmond</name></author><summary type="html">Our first minor version bump centers around an important update: better errors for clients. This is the first phase of work to allow us to provide more actionable errors to API users who might not also be developers of the API itself. This was brought to us by Graphiti maintainer Wade Tandy.</summary></entry><entry><title type="html">Graphiti 1.0 Released üéâ</title><link href="/2019/03/31/graphiti-1-0.html" rel="alternate" type="text/html" title="Graphiti 1.0 Released üéâ" /><published>2019-03-31T00:00:00-04:00</published><updated>2019-03-31T00:00:00-04:00</updated><id>/2019/03/31/graphiti-1-0</id><content type="html" xml:base="/2019/03/31/graphiti-1-0.html">&lt;p&gt;This project has gone through a number of iterations over the past three years. I‚Äôm happy to say we‚Äôve now released 1.0, committing to semantic versioning. Graphiti has now seen enough use, across a wide variety of scenarios, that we can commit to no backwards-incompatible changes for a long while, and a changelog for future releases.&lt;/p&gt;

&lt;p&gt;We‚Äôll be writing more in this blog about our future roadmap. Stay tuned!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;</content><author><name>Lee Richmond</name></author><summary type="html">This project has gone through a number of iterations over the past three years. I‚Äôm happy to say we‚Äôve now released 1.0, committing to semantic versioning. Graphiti has now seen enough use, across a wide variety of scenarios, that we can commit to no backwards-incompatible changes for a long while, and a changelog for future releases.</summary></entry></feed>